@inject IDummyClient Dummy
@inject INavigation Navigation

<ContentView OnLoaded="HandleLoadedAsync">
    @if (user != null)
    {
        <VerticalStackLayout Padding="16" Spacing="15">

            <FlexLayout Direction="FlexDirection.Row"
                        HorizontalOptions="LayoutOptions.Fill"
                        AlignItems="FlexAlignItems.Center"
                        JustifyContent="FlexJustify.SpaceBetween">

                <HorizontalStackLayout Spacing="15">
                    <AvatarView User="@user" />
                    <Label FontSize="16" Opacity="0.5" VerticalOptions="LayoutOptions.Center">@user.Username</Label>
                </HorizontalStackLayout>

                <MauiIcon Icon="@MaterialIcons.MoreVert" OnTap="ShowMoreOptionsAsync" />
            </FlexLayout>

            <Label FontSize="20" FontAttributes="FontAttributes.Bold">@Post.Title</Label>
            <Label>@Post.Body</Label>

            <HorizontalStackLayout Spacing="25">
                <MauiIcon Icon="@MaterialIcons.ThumbUp"
                          IconSize="18"
                          IconSuffixFontSize="18"
                          IconSuffix="@($"{Post.Reactions.Likes}")" />

                <MauiIcon Icon="@MaterialIcons.ThumbDown"
                          IconSize="18"
                          IconSuffixFontSize="18"
                          IconSuffix="@($"{Post.Reactions.Dislikes}")" />
            </HorizontalStackLayout>
        </VerticalStackLayout>
    }
</ContentView>

@code
{
    [Parameter] public Post Post { get; set; } = default!;

    private User? user;

    private async Task HandleLoadedAsync()
    {
        using var response = await Dummy.GetUserAsync(Post.UserId);

        if (response.IsSuccessStatusCode)
        {
            user = response.Content;
        }
    }

    private async Task ShowMoreOptionsAsync()
    {
        var sheet = await Navigation.CreateBottomSheetAsync<MoreOptionsBottomSheet>();
        await sheet.ShowAsync();
    }
}